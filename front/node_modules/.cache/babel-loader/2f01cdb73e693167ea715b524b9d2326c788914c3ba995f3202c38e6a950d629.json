{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.object.keys.js\";\nexport default {\n  name: \"AddressForm\",\n  components: {},\n  data: function data() {\n    return {\n      name: null,\n      email: null,\n      phoneNo: null,\n      phoneNoMin: 6,\n      phoneNoMax: 20,\n      line1: null,\n      postalCode: null,\n      city: null,\n      country: null,\n      formatNumber: /^[0-9+-]+$/,\n      formatEmail: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/\n    };\n  },\n  computed: {\n    nameValidation: function nameValidation() {\n      if (this.name == null) return null;else if (this.name.length == 0) return false;else return true;\n    },\n    emailValidation: function emailValidation() {\n      if (this.email == null) return null;\n      return this.formatEmail.test(this.email);\n    },\n    phoneNoValidation: function phoneNoValidation() {\n      if (this.phoneNo == null) return null;else if (this.phoneNo.length >= this.phoneNoMin && this.phoneNo.length <= this.phoneNoMax && this.formatNumber.test(this.phoneNo)) return true;else return false;\n    },\n    line1Validation: function line1Validation() {\n      if (this.line1 == null) return null;else if (this.line1.length == 0) return false;else return true;\n    },\n    postalCodeValidation: function postalCodeValidation() {\n      if (this.postalCode == null) return null;else if (this.postalCode.length == 0) return false;else return true;\n    },\n    cityValidation: function cityValidation() {\n      if (this.city == null) return null;else if (this.city.length == 0) return false;else return true;\n    },\n    countryValidation: function countryValidation() {\n      if (this.country == null) return null;else if (this.country.length == 0) return false;else return true;\n    }\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var user;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _this.$store.dispatch(\"Checkout/resetCustomerDetails\");\n          case 2:\n            user = _this.$store.state.CurrentUser.user;\n            if (Object.keys(user).length != 0) {\n              _this.name = user.firstName + \" \" + user.lastName;\n              _this.email = user.email;\n              _this.setName();\n              _this.setEmail();\n            }\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee);\n    }))();\n  },\n  methods: {\n    setName: function setName() {\n      this.$store.dispatch(\"Checkout/setCustomerName\", this.name);\n    },\n    setEmail: function setEmail() {\n      this.$store.dispatch(\"Checkout/setCustomerEmail\", this.email);\n    },\n    setPhoneNo: function setPhoneNo() {\n      this.$store.dispatch(\"Checkout/setCustomerPhoneNo\", this.phoneNo);\n    },\n    setAddressLine1: function setAddressLine1() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressLine1\", this.line1);\n    },\n    setAddressPostalCode: function setAddressPostalCode() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressPostalCode\", this.postalCode);\n    },\n    setAddressCity: function setAddressCity() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressCity\", this.city);\n    },\n    setAddressCountry: function setAddressCountry() {\n      this.$store.dispatch(\"Checkout/setCustomerAddressCountry\", this.country);\n    }\n  }\n};","map":{"version":3,"names":["name","components","data","email","phoneNo","phoneNoMin","phoneNoMax","line1","postalCode","city","country","formatNumber","formatEmail","computed","nameValidation","length","emailValidation","test","phoneNoValidation","line1Validation","postalCodeValidation","cityValidation","countryValidation","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_callee$","_context","prev","next","$store","dispatch","state","CurrentUser","Object","keys","firstName","lastName","setName","setEmail","stop","methods","setPhoneNo","setAddressLine1","setAddressPostalCode","setAddressCity","setAddressCountry"],"sources":["src/components/Checkout/AddressForm.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <b-row>\r\n        <b-col>\r\n          <b-form>\r\n            <h5 class=\"font-weight-bold\">Détails personnels </h5>\r\n            <hr />\r\n            <b-form-group\r\n              id=\"input-group-name\"\r\n              label=\"Prénom\"\r\n              label-for=\"input-name\"\r\n            >\r\n              <b-form-input\r\n                v-model=\"name\"\r\n                id=\"input-name\"\r\n                type=\"text\"\r\n                @change=\"setName\"\r\n                :state=\"nameValidation\"\r\n                required\r\n              />\r\n            </b-form-group>\r\n            <b-form-group\r\n              id=\"input-group-email\"\r\n              label=\"Email\"\r\n              label-for=\"input-email\"\r\n            >\r\n              <b-form-input\r\n                v-model=\"email\"\r\n                id=\"input-email\"\r\n                type=\"email\"\r\n                @change=\"setEmail\"\r\n                :state=\"emailValidation\"\r\n                required\r\n              />\r\n            </b-form-group>\r\n            <b-form-group\r\n              id=\"input-group-phone\"\r\n              label=\"Numéro de telephone\"\r\n              label-for=\"input-phone\"\r\n            >\r\n              <b-form-input\r\n                v-model=\"phoneNo\"\r\n                id=\"input-phone\"\r\n                type=\"text\"\r\n                @change=\"setPhoneNo\"\r\n                :state=\"phoneNoValidation\"\r\n                required\r\n              />\r\n            </b-form-group>\r\n            <div class=\"mt-4\">\r\n              <b-card bg-variant=\"light\">\r\n                <b-form-group\r\n                  label-cols-lg=\"3\"\r\n                  label=\"Adresse de livraison\"\r\n                  label-size=\"lg\"\r\n                  label-class=\"font-weight-bold pt-0\"\r\n                  class=\"mb-0\"\r\n                >\r\n                  <b-form-group\r\n                    label=\"Ligne:\"\r\n                    label-for=\"nested-line1\"\r\n                    label-cols-sm=\"3\"\r\n                    label-align-sm=\"right\"\r\n                  >\r\n                    <b-form-input\r\n                      :state=\"line1Validation\"\r\n                      required\r\n                      v-model=\"line1\"\r\n                      @change=\"setAddressLine1\"\r\n                      id=\"nested-line1\"\r\n                    />\r\n                  </b-form-group>\r\n                  \r\n  \r\n                  <b-form-group\r\n                    label=\"Code Postal:\"\r\n                    label-for=\"nested-postalcode\"\r\n                    label-cols-sm=\"3\"\r\n                    label-align-sm=\"right\"\r\n                  >\r\n                    <b-form-input\r\n                      :state=\"postalCodeValidation\"\r\n                      required\r\n                      v-model=\"postalCode\"\r\n                      @change=\"setAddressPostalCode\"\r\n                      id=\"nested-postalcode\"\r\n                    />\r\n                  </b-form-group>\r\n  \r\n                  <b-form-group\r\n                    label=\"Ville:\"\r\n                    label-for=\"nested-city\"\r\n                    label-cols-sm=\"3\"\r\n                    label-align-sm=\"right\"\r\n                  >\r\n                    <b-form-input\r\n                      :state=\"cityValidation\"\r\n                      required\r\n                      v-model=\"city\"\r\n                      @change=\"setAddressCity\"\r\n                      id=\"nested-city\"\r\n                    />\r\n                  </b-form-group>\r\n                \r\n  \r\n                  <b-form-group\r\n                    class=\"mb-0\"\r\n                    label=\"Pays:\"\r\n                    label-for=\"nested-country\"\r\n                    label-cols-sm=\"3\"\r\n                    label-align-sm=\"right\"\r\n                  >\r\n                    <b-form-input\r\n                      :state=\"countryValidation\"\r\n                      required\r\n                      v-model=\"country\"\r\n                      @change=\"setAddressCountry\"\r\n                      id=\"nested-country\"\r\n                    />\r\n                  </b-form-group>\r\n                </b-form-group>\r\n              </b-card>\r\n            </div>\r\n          </b-form>\r\n        </b-col>\r\n      </b-row>\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  export default {\r\n    name: \"AddressForm\",\r\n    components: {},\r\n    data() {\r\n      return {\r\n        name: null,\r\n        email: null,\r\n        phoneNo: null,\r\n        phoneNoMin: 6,\r\n        phoneNoMax: 20,\r\n        line1: null,\r\n      \r\n        postalCode: null,\r\n        city: null,\r\n        \r\n        country: null,\r\n        formatNumber: /^[0-9+-]+$/,\r\n        formatEmail: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\r\n      };\r\n    },\r\n    computed: {\r\n      nameValidation() {\r\n        if (this.name == null) return null;\r\n        else if (this.name.length == 0) return false;\r\n        else return true;\r\n      },\r\n      emailValidation() {\r\n        if (this.email == null) return null;\r\n        return this.formatEmail.test(this.email);\r\n      },\r\n      phoneNoValidation() {\r\n        if (this.phoneNo == null) return null;\r\n        else if (\r\n          this.phoneNo.length >= this.phoneNoMin &&\r\n          this.phoneNo.length <= this.phoneNoMax &&\r\n          this.formatNumber.test(this.phoneNo)\r\n        )\r\n          return true;\r\n        else return false;\r\n      },\r\n      line1Validation() {\r\n        if (this.line1 == null) return null;\r\n        else if (this.line1.length == 0) return false;\r\n        else return true;\r\n      },\r\n     \r\n      postalCodeValidation() {\r\n        if (this.postalCode == null) return null;\r\n        else if (this.postalCode.length == 0) return false;\r\n        else return true;\r\n      },\r\n      cityValidation() {\r\n        if (this.city == null) return null;\r\n        else if (this.city.length == 0) return false;\r\n        else return true;\r\n      },\r\n    \r\n      countryValidation() {\r\n        if (this.country == null) return null;\r\n        else if (this.country.length == 0) return false;\r\n        else return true;\r\n      },\r\n    },\r\n    async mounted() {\r\n      await this.$store.dispatch(\"Checkout/resetCustomerDetails\");\r\n      const user = this.$store.state.CurrentUser.user;\r\n      if (Object.keys(user).length != 0) {\r\n        this.name = user.firstName + \" \" + user.lastName;\r\n        this.email = user.email;\r\n        this.setName();\r\n        this.setEmail();\r\n      }\r\n    },\r\n    methods: {\r\n      setName() {\r\n        this.$store.dispatch(\"Checkout/setCustomerName\", this.name);\r\n      },\r\n      setEmail() {\r\n        this.$store.dispatch(\"Checkout/setCustomerEmail\", this.email);\r\n      },\r\n      setPhoneNo() {\r\n        this.$store.dispatch(\"Checkout/setCustomerPhoneNo\", this.phoneNo);\r\n      },\r\n      setAddressLine1() {\r\n        this.$store.dispatch(\"Checkout/setCustomerAddressLine1\", this.line1);\r\n      },\r\n      \r\n      setAddressPostalCode() {\r\n        this.$store.dispatch(\"Checkout/setCustomerAddressPostalCode\", this.postalCode);\r\n      },\r\n      setAddressCity() {\r\n        this.$store.dispatch(\"Checkout/setCustomerAddressCity\", this.city);\r\n      },\r\n    \r\n      setAddressCountry() {\r\n        this.$store.dispatch(\"Checkout/setCustomerAddressCountry\", this.country);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped></style>\r\n  "],"mappings":";;;;;;AAkIA;EACAA,IAAA;EACAC,UAAA;EACAC,IAAA,WAAAA,KAAA;IACA;MACAF,IAAA;MACAG,KAAA;MACAC,OAAA;MACAC,UAAA;MACAC,UAAA;MACAC,KAAA;MAEAC,UAAA;MACAC,IAAA;MAEAC,OAAA;MACAC,YAAA;MACAC,WAAA;IACA;EACA;EACAC,QAAA;IACAC,cAAA,WAAAA,eAAA;MACA,SAAAd,IAAA,2BACA,SAAAA,IAAA,CAAAe,MAAA,yBACA;IACA;IACAC,eAAA,WAAAA,gBAAA;MACA,SAAAb,KAAA;MACA,YAAAS,WAAA,CAAAK,IAAA,MAAAd,KAAA;IACA;IACAe,iBAAA,WAAAA,kBAAA;MACA,SAAAd,OAAA,2BACA,IACA,KAAAA,OAAA,CAAAW,MAAA,SAAAV,UAAA,IACA,KAAAD,OAAA,CAAAW,MAAA,SAAAT,UAAA,IACA,KAAAK,YAAA,CAAAM,IAAA,MAAAb,OAAA,GAEA,iBACA;IACA;IACAe,eAAA,WAAAA,gBAAA;MACA,SAAAZ,KAAA,2BACA,SAAAA,KAAA,CAAAQ,MAAA,yBACA;IACA;IAEAK,oBAAA,WAAAA,qBAAA;MACA,SAAAZ,UAAA,2BACA,SAAAA,UAAA,CAAAO,MAAA,yBACA;IACA;IACAM,cAAA,WAAAA,eAAA;MACA,SAAAZ,IAAA,2BACA,SAAAA,IAAA,CAAAM,MAAA,yBACA;IACA;IAEAO,iBAAA,WAAAA,kBAAA;MACA,SAAAZ,OAAA,2BACA,SAAAA,OAAA,CAAAK,MAAA,yBACA;IACA;EACA;EACAQ,OAAA,WAAAA,QAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;MAAA,IAAAC,IAAA;MAAA,OAAAH,mBAAA,GAAAI,IAAA,UAAAC,SAAAC,QAAA;QAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;UAAA;YAAAF,QAAA,CAAAE,IAAA;YAAA,OACAV,KAAA,CAAAW,MAAA,CAAAC,QAAA;UAAA;YACAP,IAAA,GAAAL,KAAA,CAAAW,MAAA,CAAAE,KAAA,CAAAC,WAAA,CAAAT,IAAA;YACA,IAAAU,MAAA,CAAAC,IAAA,CAAAX,IAAA,EAAAd,MAAA;cACAS,KAAA,CAAAxB,IAAA,GAAA6B,IAAA,CAAAY,SAAA,SAAAZ,IAAA,CAAAa,QAAA;cACAlB,KAAA,CAAArB,KAAA,GAAA0B,IAAA,CAAA1B,KAAA;cACAqB,KAAA,CAAAmB,OAAA;cACAnB,KAAA,CAAAoB,QAAA;YACA;UAAA;UAAA;YAAA,OAAAZ,QAAA,CAAAa,IAAA;QAAA;MAAA,GAAAjB,OAAA;IAAA;EACA;EACAkB,OAAA;IACAH,OAAA,WAAAA,QAAA;MACA,KAAAR,MAAA,CAAAC,QAAA,kCAAApC,IAAA;IACA;IACA4C,QAAA,WAAAA,SAAA;MACA,KAAAT,MAAA,CAAAC,QAAA,mCAAAjC,KAAA;IACA;IACA4C,UAAA,WAAAA,WAAA;MACA,KAAAZ,MAAA,CAAAC,QAAA,qCAAAhC,OAAA;IACA;IACA4C,eAAA,WAAAA,gBAAA;MACA,KAAAb,MAAA,CAAAC,QAAA,0CAAA7B,KAAA;IACA;IAEA0C,oBAAA,WAAAA,qBAAA;MACA,KAAAd,MAAA,CAAAC,QAAA,+CAAA5B,UAAA;IACA;IACA0C,cAAA,WAAAA,eAAA;MACA,KAAAf,MAAA,CAAAC,QAAA,yCAAA3B,IAAA;IACA;IAEA0C,iBAAA,WAAAA,kBAAA;MACA,KAAAhB,MAAA,CAAAC,QAAA,4CAAA1B,OAAA;IACA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}