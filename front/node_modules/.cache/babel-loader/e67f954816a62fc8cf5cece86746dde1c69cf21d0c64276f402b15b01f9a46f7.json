{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.slice.js\";\nimport \"core-js/modules/es.function.name.js\";\nimport \"core-js/modules/es.array.filter.js\";\nimport \"core-js/modules/es.object.to-string.js\";\nimport \"core-js/modules/es.array.find-index.js\";\nimport OrderService from \"@/services/OrderService.js\";\nimport ATopHeader from \"@/components/Admins/ATopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nexport default {\n  name: \"AOrders\",\n  components: {\n    ATopHeader: ATopHeader,\n    MyFooter: MyFooter\n  },\n  data: function data() {\n    return {\n      anyType: {\n        name: \"All\",\n        variant: \"dark\"\n      },\n      selectedTypeName: \"All\",\n      selectedTypeVariant: \"dark\",\n      orders: 0,\n      secondOrderList: null,\n      orderList: null,\n      orderList2: null,\n      orderStatus: [{\n        name: \"en cours \",\n        variant: \"info\"\n      }, {\n        name: \"en chemin\",\n        variant: \"warning\"\n      }, {\n        name: \"complète\",\n        variant: \"success\"\n      }],\n      currentPage: 1,\n      perPage: 20\n    };\n  },\n  mounted: function mounted() {\n    var _this = this;\n    return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n      var start;\n      return _regeneratorRuntime().wrap(function _callee$(_context) {\n        while (1) switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return OrderService.getOrderList();\n          case 3:\n            _this.orderList = _context.sent.data;\n            _this.orderList2 = _this.orderList.slice();\n            if (_this.orderList2) {\n              _this.orders = _this.orderList2.length;\n              start = 0;\n              _this.secondOrderList = _this.orderList2.slice(start, start + _this.perPage);\n            }\n            _context.next = 11;\n            break;\n          case 8:\n            _context.prev = 8;\n            _context.t0 = _context[\"catch\"](0);\n            console.log(_context.t0.response.data.error);\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }, _callee, null, [[0, 8]]);\n    }))();\n  },\n  methods: {\n    selectType: function selectType(status) {\n      if (status.name == \"All\") {\n        this.selectedTypeName = status.name;\n        this.selectedTypeVariant = status.variant;\n        this.orderList2 = this.orderList.slice();\n      } else {\n        this.selectedTypeName = status.name;\n        this.selectedTypeVariant = status.variant;\n        this.orderList2 = this.orderList.filter(function (obj) {\n          return obj.status == status.name;\n        });\n      }\n      this.orders = this.orderList2.length;\n      var start = 0;\n      this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\n    },\n    updateStatus: function updateStatus(order, status) {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        var index;\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              index = _this2.secondOrderList.findIndex(function (obj) {\n                return obj.id === order.id;\n              });\n              _this2.secondOrderList[index].status = status.name;\n              _this2.secondOrderList[index].variant = status.variant;\n              _context2.next = 5;\n              return OrderService.updateOrder({\n                id: order.id,\n                status: status.name,\n                variant: status.variant\n              });\n            case 5:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    },\n    paginate: function paginate(currentPage) {\n      var start = (currentPage - 1) * this.perPage;\n      this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\n    }\n  }\n};","map":{"version":3,"names":["OrderService","ATopHeader","MyFooter","name","components","data","anyType","variant","selectedTypeName","selectedTypeVariant","orders","secondOrderList","orderList","orderList2","orderStatus","currentPage","perPage","mounted","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","start","wrap","_callee$","_context","prev","next","getOrderList","sent","slice","length","t0","console","log","response","error","stop","methods","selectType","status","filter","obj","updateStatus","order","_this2","_callee2","index","_callee2$","_context2","findIndex","id","updateOrder","paginate"],"sources":["src/views/Admin/AOrders.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <ATopHeader></ATopHeader>\r\n      <b-container class=\"mt-4\">\r\n        <b-row>\r\n          <b-col class=\"text-center\">\r\n            <h3>Admins Order Page</h3>\r\n          </b-col>\r\n        </b-row>\r\n        <hr />\r\n        <div v-if=\"orders != 0\">\r\n          <b-row>\r\n            <b-col cols=\"1\" class=\"text-center\">\r\n              <strong>ID</strong>\r\n            </b-col>\r\n            <b-col cols=\"3\">\r\n              <strong>Nom et Prénom</strong>\r\n            </b-col>\r\n            <b-col cols=\"3\">\r\n              <strong>Email</strong>\r\n            </b-col>\r\n            <b-col cols=\"2\">\r\n              <strong>Commande        Prix</strong>\r\n            </b-col>\r\n            <b-col cols=\"3\" class=\"text-center\">\r\n              <strong>Statuts</strong>\r\n              <b-dropdown\r\n                size=\"sm\"\r\n                id=\"dropdown-left\"\r\n                :text=\"selectedTypeName\"\r\n                :variant=\"selectedTypeVariant\"\r\n                class=\"ml-2\"\r\n              >\r\n                <b-dropdown-item @click=\"selectType(anyType)\">\r\n                  {{ anyType.name }}\r\n                </b-dropdown-item>\r\n                <b-dropdown-item\r\n                  v-for=\"(status, idx) in orderStatus\"\r\n                  :key=\"idx\"\r\n                  @click=\"selectType(status)\"\r\n                >\r\n                  {{ status.name }}\r\n                </b-dropdown-item>\r\n              </b-dropdown>\r\n            </b-col>\r\n          </b-row>\r\n          <hr />\r\n        </div>\r\n        <div>\r\n          <div v-for=\"order in secondOrderList\" :key=\"order.id\">\r\n            <b-row>\r\n              <b-col cols=\"1\" class=\"text-center\">{{ order.id }}</b-col>\r\n              <b-col cols=\"3\">{{ order.name }}</b-col>\r\n              <b-col cols=\"3\">{{ order.email }}</b-col>\r\n              <b-col cols=\"2\">\r\n                {{ parseFloat(order.productCost) + parseFloat(order.shippingCost) }} {{ order.currency }}\r\n              </b-col>\r\n              <b-col cols=\"3\" class=\"text-center\">\r\n                <b-row>\r\n                  <b-col cols=\"7\">\r\n                    <b-dropdown\r\n                      size=\"sm\"\r\n                      block\r\n                      id=\"dropdown-left\"\r\n                      :text=\"order.status\"\r\n                      :variant=\"order.variant\"\r\n                    >\r\n                      <b-dropdown-item\r\n                        v-for=\"(status, idx) in orderStatus\"\r\n                        :key=\"idx\"\r\n                        @click=\"updateStatus(order, status)\"\r\n                      >\r\n                        {{ status.name }}\r\n                      </b-dropdown-item>\r\n                    </b-dropdown>\r\n                  </b-col>\r\n                  <b-col cols=\"5\">\r\n                    <b-button\r\n                      size=\"sm\"\r\n                      block\r\n                      variant=\"warning\"\r\n                      :to=\"`/admin/order/${order.id}`\"\r\n                    >\r\n                      Details\r\n                    </b-button>\r\n                  </b-col>\r\n                </b-row>\r\n              </b-col>\r\n            </b-row>\r\n            <hr />\r\n          </div>\r\n        </div>\r\n        <div class=\"mt-5 d-flex justify-content-center\" v-if=\"orders == 0\">\r\n          <h3>Pas de commandes trouvés...</h3>\r\n        </div>\r\n        <b-pagination\r\n          v-if=\"orders != 0\"\r\n          size=\"md\"\r\n          v-model=\"currentPage\"\r\n          :total-rows=\"orders\"\r\n          :per-page=\"perPage\"\r\n          @input=\"paginate(currentPage)\"\r\n        ></b-pagination>\r\n      </b-container>\r\n      <MyFooter class=\"mt-5\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import OrderService from \"@/services/OrderService.js\";\r\n  import ATopHeader from \"@/components/Admins/ATopHeader.vue\";\r\n  import MyFooter from \"@/components/Common/MyFooter.vue\";\r\n  export default {\r\n    name: \"AOrders\",\r\n    components: {\r\n      ATopHeader,\r\n      MyFooter,\r\n    },\r\n    data() {\r\n      return {\r\n        anyType: {\r\n          name: \"All\",\r\n          variant: \"dark\",\r\n        },\r\n        selectedTypeName: \"All\",\r\n        selectedTypeVariant: \"dark\",\r\n        orders: 0,\r\n        secondOrderList: null,\r\n        orderList: null,\r\n        orderList2: null,\r\n        orderStatus: [\r\n          \r\n          {\r\n            name: \"en cours \",\r\n            variant: \"info\",\r\n          },\r\n          {\r\n            name: \"en chemin\",\r\n            variant: \"warning\",\r\n          },\r\n          {\r\n            name: \"complète\",\r\n            variant: \"success\",\r\n          },\r\n        ],\r\n        currentPage: 1,\r\n        perPage: 20,\r\n      };\r\n    },\r\n    async mounted() {\r\n      try {\r\n        this.orderList = (await OrderService.getOrderList()).data;\r\n        this.orderList2 = this.orderList.slice();\r\n        if (this.orderList2) {\r\n          this.orders = this.orderList2.length;\r\n          const start = 0;\r\n          this.secondOrderList = this.orderList2.slice(\r\n            start,\r\n            start + this.perPage\r\n          );\r\n        }\r\n      } catch (error) {\r\n        console.log(error.response.data.error);\r\n      }\r\n    },\r\n    methods: {\r\n      selectType(status) {\r\n        if (status.name == \"All\") {\r\n          this.selectedTypeName = status.name;\r\n          this.selectedTypeVariant = status.variant;\r\n          this.orderList2 = this.orderList.slice();\r\n        } else {\r\n          this.selectedTypeName = status.name;\r\n          this.selectedTypeVariant = status.variant;\r\n          this.orderList2 = this.orderList.filter(\r\n            (obj) => obj.status == status.name\r\n          );\r\n        }\r\n        this.orders = this.orderList2.length;\r\n        const start = 0;\r\n        this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\r\n      },\r\n      async updateStatus(order, status) {\r\n        const index = this.secondOrderList.findIndex(\r\n          (obj) => obj.id === order.id\r\n        );\r\n        this.secondOrderList[index].status = status.name;\r\n        this.secondOrderList[index].variant = status.variant;\r\n        await OrderService.updateOrder({\r\n          id: order.id,\r\n          status: status.name,\r\n          variant: status.variant,\r\n        });\r\n      },\r\n      paginate(currentPage) {\r\n        const start = (currentPage - 1) * this.perPage;\r\n        this.secondOrderList = this.orderList2.slice(start, start + this.perPage);\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style lang=\"scss\" scoped></style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}