{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport AuthenticationService from \"@/services/AuthenticationService.js\";\nimport TopHeader from \"@/components/Common/TopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nimport 'tailwindcss/tailwind.css';\nimport './Register.css';\nexport default {\n  name: \"Register\",\n  components: {\n    TopHeader: TopHeader,\n    MyFooter: MyFooter\n  },\n  data: function data() {\n    return {\n      firstName: null,\n      lastName: null,\n      email: null,\n      formatName: /^.{1,15}$/,\n      formatEmail: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      formatPassword: /^[a-zA-z0-9]{8,32}$/,\n      password: null,\n      validEmail: true,\n      confirmPassword: null,\n      emailMessage: null,\n      phoneNumber: null,\n      formatPhoneNumber: /^[0-9]{8,32}$/\n    };\n  },\n  mounted: function mounted() {\n    this.$refs.firstNameField.focus();\n  },\n  computed: {\n    tokenAlert: function tokenAlert() {\n      if (this.message == null) return null;else if (this.message.length == 0) return false;else return true;\n    },\n    firstNameValidation: function firstNameValidation() {\n      if (this.firstName == null) return null;else if (!this.formatName.test(this.firstName)) return false;else return true;\n    },\n    lastNameValidation: function lastNameValidation() {\n      if (this.lastName == null) return null;else if (!this.formatName.test(this.lastName)) return false;else return true;\n    },\n    emailValidation: function emailValidation() {\n      if (this.email == null) return null;else if (!this.formatEmail.test(this.email)) return false;else return true;\n    },\n    newPasswordValidation: function newPasswordValidation() {\n      if (this.password == null) return null;else if (!this.formatPassword.test(this.password)) return false;else return true;\n    },\n    confirmPasswordValidation: function confirmPasswordValidation() {\n      if (this.confirmPassword == null) return null;else if (this.confirmPassword != this.password || !this.formatPassword.test(this.confirmPassword)) return false;else return true;\n    },\n    phoneNumberValidation: function phoneNumberValidation() {\n      if (this.phoneNumber == null) return null;else if (!this.formatPhoneNumber.test(this.phoneNumber)) return false;else return true;\n    }\n  },\n  methods: {\n    createAccount: function createAccount() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var user;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!_this.firstNameValidation || !_this.lastNameValidation || !_this.emailValidation || !_this.newPasswordValidation || !_this.confirmPasswordValidation || !_this.phoneNumberValidation)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return AuthenticationService.register({\n                firstName: _this.firstName,\n                lastName: _this.lastName,\n                email: _this.email,\n                password: _this.password,\n                phoneNo: _this.phoneNumber\n              });\n            case 5:\n              user = _context.sent;\n              _this.$store.dispatch(\"CurrentUser/setNewUserId\", user.data.id);\n              _this.$store.dispatch(\"CurrentUser/setNewUserEmail\", _this.email);\n              console.log(\"here\");\n              _this.$router.push({\n                path: \"/user-verify\"\n              });\n              _context.next = 16;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              _this.validEmail = false;\n              _this.emailMessage = _context.t0.response.data.error;\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 12]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["AuthenticationService","TopHeader","MyFooter","name","components","data","firstName","lastName","email","formatName","formatEmail","formatPassword","password","validEmail","confirmPassword","emailMessage","phoneNumber","formatPhoneNumber","mounted","$refs","firstNameField","focus","computed","tokenAlert","message","length","firstNameValidation","test","lastNameValidation","emailValidation","newPasswordValidation","confirmPasswordValidation","phoneNumberValidation","methods","createAccount","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_callee$","_context","prev","next","abrupt","register","phoneNo","sent","$store","dispatch","id","console","log","$router","push","path","t0","response","error","stop"],"sources":["src/views/User/Register.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <TopHeaderAuth />\r\n      <b-container class=\"mt-5\">\r\n\r\n        \r\n\r\n        <section class=\"container py-20\">\r\n\t<div class=\"grid grid-cols-1 md:grid-cols-2 bg-primary rounded-xl shadow-3xl overflow-hidden\">\r\n\t\t<div class=\"flex flex-col items-center justify-between gap-8 p-5 md:p-10 lg:p-14\">\r\n\t\t\t<div>\r\n        <b-row align-h=\"center\">\r\n          <b-col cols=\"7\">\r\n            <b-card style=\"color: #001e5f\">\r\n              <h4 class=\"font-weight-bold\">Créer un compte</h4>\r\n              <b-form @submit.stop.prevent=\"createAccount\" class=\"mt-4\">\r\n                <b-row>\r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-first-name\"\r\n                      label=\"Prénom\"\r\n                      label-for=\"input-first-name\"\r\n                    >\r\n                    <label class=\"px-3 py-1 text-lg join-item text-pastelBlue border-r border-r-slate-400\"><i class=\"fa-solid fa-circle-user\"></i></label>\r\n                      <b-form-input\r\n                        v-model=\"firstName\"\r\n                        ref=\"firstNameField\"\r\n                        id=\"input-first-name\"\r\n                        type=\"text\"\r\n                        class=\"px-3 py-2 w-full text-sm join-item outline-none bg-transparent\"\r\n                        :state=\"firstNameValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"firstName\"\r\n                        :state=\"firstNameValidation\"\r\n                      >\r\n                      Votre prénom peut comporter 15 caractères.\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col>\r\n                    <label class=\"px-3 py-1 text-lg join-item text-pastelBlue border-r border-r-slate-400\"><i class=\"fa-solid fa-circle-user\"></i></label>\r\n                    <b-form-group\r\n                      id=\"input-group-last-name\"\r\n                      label=\"Nom\"\r\n                      label-for=\"input-last-name\"\r\n                    >\r\n                      <b-form-input\r\n                        v-model=\"lastName\"\r\n                        id=\"input-last-name\"\r\n                        type=\"text\"\r\n                        class=\"px-3 py-2 w-full text-sm join-item outline-none bg-transparent\"\r\n                        :state=\"lastNameValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"lastName\"\r\n                        :state=\"lastNameValidation\"\r\n                      >\r\n                      Votre nom de famille peut comporter 15 caractères.\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                </b-row>\r\n                <b-row>\r\n                \r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-phone-number\"\r\n                      label=\"Numéro de téléphone\"\r\n                      label-for=\"input-phone-number\"\r\n                    >\r\n                    <span>\r\n                    <label class=\"px-3 py-1 text-lg join-item text-pastelBlue border-r border-r-slate-400\"><i class=\"fa-solid fa-phone\"></i></label> \r\n                     <b-form-input\r\n                        v-model=\"phoneNumber\"\r\n                        id=\"input-phone-number\"\r\n                        type=\"text\"\r\n                        class=\"px-3 py-2 w-full text-sm join-item outline-none bg-transparent\"\r\n                        :state=\"phoneNumberValidation\"\r\n                        required\r\n                      />\r\n                    </span>\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"phoneNumber\"\r\n                        :state=\"phoneNumberValidation\"\r\n                      >\r\n                        \r\n\r\n                      Votre numéro de téléphone doit comporter au moins 8 chiffres.\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                </b-row>\r\n                <b-form-group\r\n                  id=\"input-group-email\"\r\n                  label=\"Email\"\r\n                  label-for=\"input-email\"\r\n                >\r\n                <label class=\"px-3 py-1 text-lg join-item text-pastelBlue border-r border-r-slate-400\"><i class=\"fa-solid fa-envelope\"></i></label>\r\n                  <b-form-input\r\n                    v-model=\"email\"\r\n                    id=\"input-email\"\r\n                    type=\"email\"\r\n                    class=\"px-3 py-2 w-full text-sm join-item outline-none bg-transparent\"\r\n                    @keyup=\"validEmail = true\"\r\n                    :state=\"validEmail && emailValidation\"\r\n                    required\r\n                  />\r\n                  <b-form-invalid-feedback\r\n                    v-if=\"email\"\r\n                    :state=\"validEmail && emailValidation\"\r\n                  >\r\n                    {{ emailMessage }}\r\n                  </b-form-invalid-feedback>\r\n                </b-form-group>\r\n  \r\n                <b-row>\r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-password\"\r\n                      label=\"mot de passe\"\r\n                      label-for=\"input-password\"\r\n                    >\r\n                    <label class=\"px-3 py-1 text-lg join-item text-pastelBlue border-r border-r-slate-400\"><i class=\"fa-solid fa-lock\"></i></label>\r\n                      <b-form-input\r\n                        v-model=\"password\"\r\n                        id=\"input-password\"\r\n                        type=\"password\"\r\n                        class=\"px-3 py-2 w-full text-sm join-item outline-none bg-transparent\"\r\n                        :state=\"newPasswordValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"password\"\r\n                        :state=\"newPasswordValidation\"\r\n                      >\r\n\r\n                      Votre mot de passe peut comporter entre 8 et 32 caractères, contenir\r\n                        lettres, chiffres et ne doit pas contenir d'espace.\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-confirm-password\"\r\n                      label=\"Confirmez le mot de passe\"\r\n                      label-for=\"input-confirm-password\"\r\n                    >\r\n                    <label class=\"px-3 py-1 text-lg join-item text-pastelBlue border-r border-r-slate-400\"><i class=\"fa-solid fa-lock\"></i></label>\r\n                      <b-form-input\r\n                        v-model=\"confirmPassword\"\r\n                        id=\"input-confirm-password\"\r\n                        type=\"password\"\r\n                        class=\"px-3 py-2 w-full text-sm join-item outline-none bg-transparent\"\r\n                        :state=\"confirmPasswordValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"confirmPassword\"\r\n                        :state=\"confirmPasswordValidation\"\r\n                      >\r\n                        \r\n                      Le mot de passe ne correspond pas\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                </b-row>\r\n  \r\n                <b-row class=\"mt-3\">\r\n                  <b-col cols=\"3\" />\r\n                  <b-col cols=\"6\">\r\n                    <b-button block type=\"submit\" class=\"p-2\" variant=\"warning\">\r\n                      Créer un compte\r\n                    </b-button>\r\n                  </b-col>\r\n                  <b-col cols=\"3\" />\r\n                </b-row>\r\n              </b-form>\r\n              <hr />\r\n              <b-row>\r\n                <b-col class=\"text-center\">\r\n                  <a>\r\n                    Vous avez déjà un compte?</a><a href=\"/login\">&nbsp;Connexion</a>\r\n                </b-col>\r\n              </b-row>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n\r\n\r\n      </div>\r\n    </div>\r\n  </div>\r\n\r\n        </section>\r\n\r\n\r\n\r\n      </b-container>\r\n      <MyFooter class=\"mt-5\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import AuthenticationService from \"@/services/AuthenticationService.js\";\r\n  import TopHeader from \"@/components/Common/TopHeader.vue\";\r\n  import MyFooter from \"@/components/Common/MyFooter.vue\";\r\n  import 'tailwindcss/tailwind.css';\r\n  \r\n  import './Register.css';\r\n  export default {\r\n    name: \"Register\",\r\n    components: {\r\n      TopHeader,\r\n      MyFooter,\r\n    },\r\n    data() {\r\n      return {\r\n        firstName: null,\r\n        lastName: null,\r\n        email: null,\r\n        formatName: /^.{1,15}$/,\r\n        formatEmail: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\r\n        formatPassword: /^[a-zA-z0-9]{8,32}$/,\r\n        password: null,\r\n        validEmail: true,\r\n        confirmPassword: null,\r\n        emailMessage: null,\r\n        phoneNumber: null,\r\n        formatPhoneNumber: /^[0-9]{8,32}$/,\r\n      \r\n      };\r\n    },\r\n    mounted() {\r\n      this.$refs.firstNameField.focus();\r\n    },\r\n    computed: {\r\n      tokenAlert() {\r\n        if (this.message == null) return null;\r\n        else if (this.message.length == 0) return false;\r\n        else return true;\r\n      },\r\n      firstNameValidation() {\r\n        if (this.firstName == null) return null;\r\n        else if (!this.formatName.test(this.firstName)) return false;\r\n        else return true;\r\n      },\r\n      lastNameValidation() {\r\n        if (this.lastName == null) return null;\r\n        else if (!this.formatName.test(this.lastName)) return false;\r\n        else return true;\r\n      },\r\n      emailValidation() {\r\n        if (this.email == null) return null;\r\n        else if (!this.formatEmail.test(this.email)) return false;\r\n        else return true;\r\n      },\r\n      newPasswordValidation() {\r\n        if (this.password == null) return null;\r\n        else if (!this.formatPassword.test(this.password)) return false;\r\n        else return true;\r\n      },\r\n      confirmPasswordValidation() {\r\n        if (this.confirmPassword == null) return null;\r\n        else if (\r\n          this.confirmPassword != this.password ||\r\n          !this.formatPassword.test(this.confirmPassword)\r\n        )\r\n          return false;\r\n        else return true;\r\n      }, \r\n      phoneNumberValidation() {\r\n        if (this.phoneNumber == null) return null;\r\n        else if (\r\n          !this.formatPhoneNumber.test(this.phoneNumber)\r\n        )\r\n          return false;\r\n        else return true;\r\n      },\r\n    },\r\n    methods: {\r\n      async createAccount() {\r\n        if (\r\n          !this.firstNameValidation ||\r\n          !this.lastNameValidation ||\r\n          !this.emailValidation ||\r\n          !this.newPasswordValidation ||\r\n          !this.confirmPasswordValidation ||\r\n          !this.phoneNumberValidation\r\n        )\r\n          return;\r\n        try {\r\n          const user = await AuthenticationService.register({\r\n            firstName: this.firstName,\r\n            lastName: this.lastName,\r\n            email: this.email,\r\n            password: this.password,\r\n            phoneNo:this.phoneNumber,\r\n            \r\n            \r\n          });\r\n          this.$store.dispatch(\"CurrentUser/setNewUserId\", user.data.id);\r\n          this.$store.dispatch(\"CurrentUser/setNewUserEmail\", this.email);\r\n          console.log(\"here\");\r\n          this.$router.push({ path: \"/user-verify\" });\r\n        } catch (error) {\r\n          this.validEmail = false;\r\n          this.emailMessage = error.response.data.error;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped lang=\"scss\"></style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}