{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.regexp.exec.js\";\nimport \"core-js/modules/es.regexp.test.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport AuthenticationService from \"@/services/AuthenticationService.js\";\nimport ATopHeader from \"@/components/Admins/ATopHeader.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nexport default {\n  name: \"AddSupplier\",\n  components: {\n    ATopHeader: ATopHeader,\n    MyFooter: MyFooter\n  },\n  data: function data() {\n    return {\n      firstName: null,\n      lastName: null,\n      email: null,\n      formatName: /^.{1,15}$/,\n      formatEmail: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\n      formatPassword: /^[a-zA-z0-9]{8,32}$/,\n      password: null,\n      validEmail: true,\n      confirmPassword: null,\n      emailMessage: null,\n      priority: 2,\n      companyName: null,\n      phoneNumber: null,\n      formatPhoneNumber: /^[0-9]{8,32}$/,\n      formatCompanyName: /^[a-zA-Z]{1,15}$/\n    };\n  },\n  mounted: function mounted() {\n    this.$refs.firstNameField.focus();\n  },\n  computed: {\n    tokenAlert: function tokenAlert() {\n      if (this.message == null) return null;else if (this.message.length == 0) return false;else return true;\n    },\n    firstNameValidation: function firstNameValidation() {\n      if (this.firstName == null) return null;else if (!this.formatName.test(this.firstName)) return false;else return true;\n    },\n    lastNameValidation: function lastNameValidation() {\n      if (this.lastName == null) return null;else if (!this.formatName.test(this.lastName)) return false;else return true;\n    },\n    emailValidation: function emailValidation() {\n      if (this.email == null) return null;else if (!this.formatEmail.test(this.email)) return false;else return true;\n    },\n    newPasswordValidation: function newPasswordValidation() {\n      if (this.password == null) return null;else if (!this.formatPassword.test(this.password)) return false;else return true;\n    },\n    confirmPasswordValidation: function confirmPasswordValidation() {\n      if (this.confirmPassword == null) return null;else if (this.confirmPassword != this.password || !this.formatPassword.test(this.confirmPassword)) return false;else return true;\n    },\n    phoneNumberValidation: function phoneNumberValidation() {\n      if (this.phoneNumber == null) return null;else if (!this.formatPhoneNumber.test(this.phoneNumber)) return false;else return true;\n    },\n    CompanyNameValidation: function CompanyNameValidation() {\n      if (this.companyName == null) return null;else if (!this.formatCompanyName.test(this.companyName)) return false;else return true;\n    }\n  },\n  methods: {\n    createAccount: function createAccount() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var user;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              if (!(!_this.firstNameValidation || !_this.lastNameValidation || !_this.emailValidation || !_this.newPasswordValidation || !_this.confirmPasswordValidation || !_this.CompanyNameValidation || !_this.phoneNumberValidation)) {\n                _context.next = 2;\n                break;\n              }\n              return _context.abrupt(\"return\");\n            case 2:\n              _context.prev = 2;\n              _context.next = 5;\n              return AuthenticationService.registerSupplier({\n                firstName: _this.firstName,\n                lastName: _this.lastName,\n                email: _this.email,\n                password: _this.password,\n                phoneNo: _this.phoneNumber\n              });\n            case 5:\n              user = _context.sent;\n              console.log(user.data);\n              _this.$store.dispatch(\"CurrentUser/setNewUserId\", user.data.id);\n              _this.$store.dispatch(\"CurrentUser/setNewUserEmail\", _this.email);\n              _this.$router.push({\n                path: \"/admin/users\"\n              });\n              _context.next = 16;\n              break;\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](2);\n              _this.validEmail = false;\n              _this.emailMessage = _context.t0.response.data.error;\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[2, 12]]);\n      }))();\n    },\n    addedSupplier: function addedSupplier() {\n      var _this2 = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2() {\n        return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n          while (1) switch (_context2.prev = _context2.next) {\n            case 0:\n              _this2.$bvToast.toast(\"Fournisseur a été ajouté avec succès \", {\n                title: \"Ajouter Fournisseur\",\n                variant: \"success\",\n                toaster: \"b-toaster-top-center\",\n                noCloseButton: false,\n                solid: true\n              });\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }, _callee2);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["AuthenticationService","ATopHeader","MyFooter","name","components","data","firstName","lastName","email","formatName","formatEmail","formatPassword","password","validEmail","confirmPassword","emailMessage","priority","companyName","phoneNumber","formatPhoneNumber","formatCompanyName","mounted","$refs","firstNameField","focus","computed","tokenAlert","message","length","firstNameValidation","test","lastNameValidation","emailValidation","newPasswordValidation","confirmPasswordValidation","phoneNumberValidation","CompanyNameValidation","methods","createAccount","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","wrap","_callee$","_context","prev","next","abrupt","registerSupplier","phoneNo","sent","console","log","$store","dispatch","id","$router","push","path","t0","response","error","stop","addedSupplier","_this2","_callee2","_callee2$","_context2","$bvToast","toast","title","variant","toaster","noCloseButton","solid"],"sources":["src/views/Admin/AddSupplier.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <ATopHeader />\r\n      <b-container class=\"mt-5\">\r\n        <b-row align-h=\"center\">\r\n          <b-col cols=\"7\">\r\n            <b-card style=\"color: #001e5f\">\r\n              <h4 class=\"font-weight-bold\">Créer un compte fournisseur</h4>\r\n              <b-form @submit.stop.prevent=\"createAccount\" class=\"mt-4\">\r\n                <b-row>\r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-first-name\"\r\n                      label=\"Prénom \"\r\n                      label-for=\"input-first-name\"\r\n                    >\r\n                      <b-form-input\r\n                        v-model=\"firstName\"\r\n                        ref=\"firstNameField\"\r\n                        id=\"input-first-name\"\r\n                        type=\"text\"\r\n                        :state=\"firstNameValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"firstName\"\r\n                        :state=\"firstNameValidation\"\r\n                      >\r\n                        Your first name could be 15 character long.\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-last-name\"\r\n                      label=\"Nom\"\r\n                      label-for=\"input-last-name\"\r\n                    >\r\n                      <b-form-input\r\n                        v-model=\"lastName\"\r\n                        id=\"input-last-name\"\r\n                        type=\"text\"\r\n                        :state=\"lastNameValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"lastName\"\r\n                        :state=\"lastNameValidation\"\r\n                      >\r\n                      Votre nom de famille peut comporter 15 caractères. \r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                </b-row>\r\n                <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-phone-number\"\r\n                      label=\"Numéro de téléphone\"\r\n                      label-for=\"input-phone-number\"\r\n                    >\r\n                      <b-form-input\r\n                        v-model=\"phoneNumber\"\r\n                        id=\"input-phone-number\"\r\n                        type=\"text\"\r\n                        :state=\"phoneNumberValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"phoneNumber\"\r\n                        :state=\"phoneNumberValidation\"\r\n                      >\r\n                        Votre numéro de téléphone doit comporter au moins 8 chiffres.\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                <b-form-group\r\n                  id=\"input-group-email\"\r\n                  label=\"Email\"\r\n                  label-for=\"input-email\"\r\n                >\r\n                  <b-form-input\r\n                    v-model=\"email\"\r\n                    id=\"input-email\"\r\n                    type=\"email\"\r\n                    @keyup=\"validEmail = true\"\r\n                    :state=\"validEmail && emailValidation\"\r\n                    required\r\n                  />\r\n                  <b-form-invalid-feedback\r\n                    v-if=\"email\"\r\n                    :state=\"validEmail && emailValidation\"\r\n                  >\r\n                    {{ emailMessage }}\r\n                  </b-form-invalid-feedback>\r\n                </b-form-group>\r\n  \r\n                <b-row>\r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-password\"\r\n                      label=\"Mot de passe\"\r\n                      label-for=\"input-password\"\r\n                    >\r\n                      <b-form-input\r\n                        v-model=\"password\"\r\n                        id=\"input-password\"\r\n                        type=\"password\"\r\n                        :state=\"newPasswordValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"password\"\r\n                        :state=\"newPasswordValidation\"\r\n                      >\r\n                        Votre mot de passe peut comporter entre 8 et 32 caractères, contenir\r\n                        lettres, chiffres et ne doit pas contenir d'espace.\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-confirm-password\"\r\n                      label=\"Confirmez le mot de passe\"\r\n                      label-for=\"input-confirm-password\"\r\n                    >\r\n                      <b-form-input\r\n                        v-model=\"confirmPassword\"\r\n                        id=\"input-confirm-password\"\r\n                        type=\"password\"\r\n                        :state=\"confirmPasswordValidation\"\r\n                        required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"confirmPassword\"\r\n                        :state=\"confirmPasswordValidation\"\r\n                      >\r\n                         Le mot de passe ne correspond pas\r\n                      </b-form-invalid-feedback>\r\n                    </b-form-group>\r\n                  </b-col>\r\n                </b-row>\r\n                <b-row>\r\n                  <b-col>\r\n                    <b-form-group\r\n                      id=\"input-group-company-name\"\r\n                      label=\"Nom de l'entreprise\"\r\n                      label-for=\"input-company-name\"\r\n                    >\r\n                      <b-form-input\r\n                        v-model=\"companyName\"\r\n                        ref=\"companyNameField\"\r\n                        id=\"input-company-name\"\r\n                        type=\"text\"\r\n                        :state=\"CompanyNameValidation\"\r\n                       required\r\n                      />\r\n                      <b-form-invalid-feedback\r\n                        v-if=\"companyName\"\r\n                        :state=\"CompanyNameValidation\"\r\n                      >\r\n                         Le nom de votre entreprise peut comporter 15 caractères.\r\n                      </b-form-invalid-feedback>\r\n                    \r\n                    </b-form-group>\r\n                  </b-col>\r\n                </b-row>\r\n                <b-row class=\"mt-3\">\r\n                  <b-col cols=\"3\" />\r\n                  <b-col cols=\"6\">\r\n                    <b-button @click=\"addedSupplier()\" block type=\"submit\"  class=\"p-2\" variant=\"warning\">\r\n                       Créer un compte\r\n                    </b-button>\r\n                  </b-col>\r\n                  <b-col cols=\"3\" />\r\n                </b-row>\r\n              </b-form>\r\n              <hr />\r\n              \r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n      </b-container>\r\n      <MyFooter class=\"mt-5\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import AuthenticationService from \"@/services/AuthenticationService.js\";\r\n \r\n  import ATopHeader from \"@/components/Admins/ATopHeader.vue\";\r\n  import MyFooter from \"@/components/Common/MyFooter.vue\";\r\n  export default {\r\n    name: \"AddSupplier\",\r\n    components: {\r\n      ATopHeader,\r\n      MyFooter,\r\n    },\r\n    data() {\r\n      return {\r\n        firstName: null,\r\n        lastName: null,\r\n        email: null,\r\n        formatName: /^.{1,15}$/,\r\n        formatEmail: /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,4}$/,\r\n        formatPassword: /^[a-zA-z0-9]{8,32}$/,\r\n        password: null,\r\n        validEmail: true,\r\n        confirmPassword: null,\r\n        emailMessage: null,\r\n        priority:2,\r\n        companyName:null,\r\n        phoneNumber: null,\r\n        formatPhoneNumber: /^[0-9]{8,32}$/,\r\n        formatCompanyName: /^[a-zA-Z]{1,15}$/,\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$refs.firstNameField.focus();\r\n    },\r\n    computed: {\r\n      tokenAlert() {\r\n        if (this.message == null) return null;\r\n        else if (this.message.length == 0) return false;\r\n        else return true;\r\n      },\r\n      firstNameValidation() {\r\n        if (this.firstName == null) return null;\r\n        else if (!this.formatName.test(this.firstName)) return false;\r\n        else return true;\r\n      },\r\n      lastNameValidation() {\r\n        if (this.lastName == null) return null;\r\n        else if (!this.formatName.test(this.lastName)) return false;\r\n        else return true;\r\n      },\r\n      emailValidation() {\r\n        if (this.email == null) return null;\r\n        else if (!this.formatEmail.test(this.email)) return false;\r\n        else return true;\r\n      },\r\n      newPasswordValidation() {\r\n        if (this.password == null) return null;\r\n        else if (!this.formatPassword.test(this.password)) return false;\r\n        else return true;\r\n      },\r\n      confirmPasswordValidation() {\r\n        if (this.confirmPassword == null) return null;\r\n        else if (\r\n          this.confirmPassword != this.password ||\r\n          !this.formatPassword.test(this.confirmPassword)\r\n        )\r\n          return false;\r\n        else return true;\r\n      },\r\n      phoneNumberValidation() {\r\n        if (this.phoneNumber == null) return null;\r\n        else if (\r\n          !this.formatPhoneNumber.test(this.phoneNumber)\r\n        )\r\n          return false;\r\n        else return true;\r\n      },\r\n      CompanyNameValidation() {\r\n        if (this.companyName == null) return null;\r\n        else if (\r\n          !this.formatCompanyName.test(this.companyName)\r\n        )\r\n          return false;\r\n        else return true;\r\n      },\r\n    },\r\n    methods: {\r\n      async createAccount() {\r\n        if (\r\n          !this.firstNameValidation ||\r\n          !this.lastNameValidation ||\r\n          !this.emailValidation ||\r\n          !this.newPasswordValidation ||\r\n          !this.confirmPasswordValidation ||\r\n          \r\n          !this.CompanyNameValidation ||\r\n          !this.phoneNumberValidation\r\n           \r\n        )\r\n          return;\r\n          \r\n        try {\r\n          \r\n          const user = await AuthenticationService.registerSupplier({\r\n            firstName: this.firstName,\r\n            lastName: this.lastName,\r\n            email: this.email,\r\n            password: this.password,        \r\n            phoneNo:this.phoneNumber\r\n  \r\n          });\r\n          console.log(user.data)\r\n         \r\n          this.$store.dispatch(\"CurrentUser/setNewUserId\", user.data.id);\r\n          this.$store.dispatch(\"CurrentUser/setNewUserEmail\", this.email);\r\n       \r\n         \r\n          this.$router.push({ path: \"/admin/users\" });\r\n        } catch (error) {\r\n          this.validEmail = false;\r\n          this.emailMessage = error.response.data.error;\r\n        }\r\n      },\r\n      async addedSupplier(){ \r\n      this.$bvToast.toast(\"Fournisseur a été ajouté avec succès \", {\r\n            title: \"Ajouter Fournisseur\",\r\n            variant: \"success\",\r\n            toaster: \"b-toaster-top-center\",\r\n            noCloseButton: false,\r\n            solid: true,\r\n          });\r\n        },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped lang=\"scss\"></style>\r\n  "],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}