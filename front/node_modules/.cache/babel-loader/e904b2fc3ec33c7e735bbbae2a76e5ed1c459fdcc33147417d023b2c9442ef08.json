{"ast":null,"code":"import _regeneratorRuntime from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";\nimport _asyncToGenerator from \"C:/Users/g702306/Desktop/testy000/appliomm/E--commerce/pfa/front/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport \"core-js/modules/es.array.push.js\";\nimport AuthenticationService from \"@/services/AuthenticationService.js\";\nimport TopHeader from \"@/components/Common/TopHeader.vue\";\nimport ReqPassToken from \"@/components/User/ReqPassToken.vue\";\nimport MyFooter from \"@/components/Common/MyFooter.vue\";\nimport './Login.css';\nexport default {\n  name: \"Login\",\n  components: {\n    TopHeader: TopHeader,\n    ReqPassToken: ReqPassToken,\n    MyFooter: MyFooter\n  },\n  data: function data() {\n    return {\n      email: null,\n      password: null,\n      emailValidation: null,\n      invalidEmailMessage: \"\",\n      loginMessage: null,\n      loginAlert: false\n    };\n  },\n  mounted: function mounted() {\n    this.$refs.emailField.focus();\n  },\n  methods: {\n    login: function login() {\n      var _this = this;\n      return _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee() {\n        var user, response;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return AuthenticationService.checkRegsToken({\n                email: _this.email\n              });\n            case 3:\n              user = _context.sent.data;\n              _context.next = 13;\n              break;\n            case 6:\n              _context.prev = 6;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(user);\n              console.log(_context.t0);\n              _this.emailValidation = false;\n              _this.invalidEmailMessage = \"User not found.\";\n              return _context.abrupt(\"return\");\n            case 13:\n              if (user.verificationStatus) {\n                _context.next = 18;\n                break;\n              }\n              _this.$store.dispatch(\"CurrentUser/setNewUserId\", user.id);\n              _this.$store.dispatch(\"CurrentUser/setNewUserEmail\", _this.email);\n              _this.$router.push({\n                path: \"/user-verify\"\n              });\n              return _context.abrupt(\"return\");\n            case 18:\n              _context.prev = 18;\n              _context.next = 21;\n              return AuthenticationService.login({\n                email: _this.email,\n                password: _this.password\n              });\n            case 21:\n              response = _context.sent.data;\n              _this.$store.dispatch(\"CurrentUser/setToken\", response.token);\n              _this.$store.dispatch(\"CurrentUser/setUser\", response.user);\n              _this.$store.dispatch(\"Wishlist/setWishlist\");\n              _this.$router.push({\n                path: \"/\"\n              });\n              _context.next = 32;\n              break;\n            case 28:\n              _context.prev = 28;\n              _context.t1 = _context[\"catch\"](18);\n              _this.loginAlert = true;\n              _this.loginMessage = _context.t1.response.data.error;\n            case 32:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee, null, [[0, 6], [18, 28]]);\n      }))();\n    }\n  }\n};","map":{"version":3,"names":["AuthenticationService","TopHeader","ReqPassToken","MyFooter","name","components","data","email","password","emailValidation","invalidEmailMessage","loginMessage","loginAlert","mounted","$refs","emailField","focus","methods","login","_this","_asyncToGenerator","_regeneratorRuntime","mark","_callee","user","response","wrap","_callee$","_context","prev","next","checkRegsToken","sent","t0","console","log","abrupt","verificationStatus","$store","dispatch","id","$router","push","path","token","t1","error","stop"],"sources":["src/views/User/Login.vue"],"sourcesContent":["<template>\r\n    <div>\r\n      <TopHeader />\r\n      <b-container class=\"mt-5\">\r\n\r\n        <section class=\"container py-20\">\r\n\t<div class=\"grid grid-cols-1 md:grid-cols-2 bg-primary rounded-xl shadow-3xl overflow-hidden\">\r\n\t\t<div class=\"flex flex-col items-center justify-between gap-8 p-5 md:p-10 lg:p-14\">\r\n\t\t\t<div>\r\n\r\n\r\n\r\n\r\n        <b-row align-h=\"center\">\r\n          <b-col cols=\"10\" md=\"7\" lg=\"5\">\r\n            <b-card style=\"color: #001e5f\">\r\n              <h4 class=\"font-weight-bold\">Connexion</h4>\r\n              <b-form @submit.stop.prevent=\"login\" class=\"mt-4\">\r\n                <b-form-group\r\n                  id=\"input-group-email\"\r\n                  label=\"Email\"\r\n                  label-for=\"input-email\"\r\n                 \r\n                >\r\n                  <b-form-input\r\n                    v-model=\"email\"\r\n                    id=\"input-email\"\r\n                    type=\"email\"\r\n                    ref=\"emailField\"\r\n                    \r\n                    :state=\"emailValidation\"\r\n                    required\r\n                  />\r\n                  <b-form-invalid-feedback :state=\"emailValidation\">\r\n                    {{ invalidEmailMessage }}\r\n                  </b-form-invalid-feedback>\r\n                </b-form-group>\r\n  \r\n                <b-form-group\r\n                  id=\"input-group-password\"\r\n                  label=\"Mot de passe\"\r\n                  label-for=\"input-password\"\r\n                >\r\n                  <b-form-input\r\n                    v-model=\"password\"\r\n                    id=\"input-password\"\r\n                    type=\"password\"\r\n                    required\r\n                  />\r\n                </b-form-group>\r\n                <b-alert\r\n                  variant=\"primary\"\r\n                  class=\"my-2 p-1 pl-2\"\r\n                  :show=\"loginAlert\"\r\n                >\r\n                  {{ loginMessage }}\r\n                </b-alert>\r\n                <b-row>\r\n                  <b-col cols=\"3\" />\r\n                  <b-col cols=\"6\">\r\n                    <b-button\r\n                      block\r\n                      class=\"p-2 mt-2\"\r\n                      type=\"submit\"\r\n                      variant=\"warning\"\r\n                    >\r\n                      Connexion\r\n                    </b-button>\r\n                  </b-col>\r\n                  <b-col cols=\"3\" />\r\n                </b-row>\r\n              </b-form>\r\n              <b-row class=\"mt-2\">\r\n                <b-col class=\"text-center\">\r\n                  <small>\r\n                    <b-link v-b-toggle.request-password-token>\r\n                      Mot de passe oublié?\r\n                    </b-link>\r\n                  </small>\r\n                </b-col>\r\n              </b-row>\r\n              <b-collapse id=\"request-password-token\">\r\n                <ReqPassToken />\r\n              </b-collapse>\r\n              <hr />\r\n              <b-row>\r\n                <b-col class=\"text-center\">\r\n                  Nouveau client?&nbsp;\r\n                  <b-link to=\"/register\">Créez votre compte</b-link>\r\n                </b-col>\r\n              </b-row>\r\n            </b-card>\r\n          </b-col>\r\n        </b-row>\r\n\r\n\r\n\r\n\r\n\r\n      </div>\r\n      </div>\r\n\r\n  </div>\r\n        </section>\r\n\r\n      \r\n\r\n\r\n\r\n\r\n      </b-container>\r\n      <MyFooter class=\"mt-5\" />\r\n    </div>\r\n  </template>\r\n  \r\n  <script>\r\n  import AuthenticationService from \"@/services/AuthenticationService.js\";\r\n  import TopHeader from \"@/components/Common/TopHeader.vue\";\r\n  import ReqPassToken from \"@/components/User/ReqPassToken.vue\";\r\n  import MyFooter from \"@/components/Common/MyFooter.vue\";\r\n  import './Login.css';\r\n  export default {\r\n    name: \"Login\",\r\n    components: {\r\n      TopHeader,\r\n      ReqPassToken,\r\n      MyFooter,\r\n    },\r\n    data() {\r\n      return {\r\n        email: null,\r\n        password: null,\r\n        emailValidation: null,\r\n        invalidEmailMessage: \"\",\r\n        loginMessage: null,\r\n        loginAlert: false,\r\n      };\r\n    },\r\n    mounted() {\r\n      this.$refs.emailField.focus();\r\n    },\r\n    methods: {\r\n      async login() {\r\n        var user \r\n        try {\r\n          \r\n          user = ( await AuthenticationService.checkRegsToken({\r\n              email: this.email,\r\n            })\r\n          ).data;\r\n          \r\n        } catch (error) {\r\n        \r\n          console.log(user)\r\n          console.log(error);\r\n          this.emailValidation = false;\r\n          this.invalidEmailMessage = \"User not found.\";\r\n          return;\r\n        }\r\n        if (!user.verificationStatus) {\r\n          this.$store.dispatch(\"CurrentUser/setNewUserId\", user.id);\r\n          this.$store.dispatch(\"CurrentUser/setNewUserEmail\", this.email);\r\n          this.$router.push({ path: \"/user-verify\" });\r\n          return;\r\n        }\r\n  \r\n        try {\r\n          const response = (\r\n            await AuthenticationService.login({\r\n              email: this.email,\r\n              password: this.password,\r\n            })\r\n          ).data;\r\n          this.$store.dispatch(\"CurrentUser/setToken\", response.token);\r\n          this.$store.dispatch(\"CurrentUser/setUser\", response.user);\r\n          this.$store.dispatch(\"Wishlist/setWishlist\");\r\n          this.$router.push({ path: \"/\" });\r\n        } catch (error) {\r\n          this.loginAlert = true;\r\n          this.loginMessage = error.response.data.error;\r\n        }\r\n      },\r\n    },\r\n  };\r\n  </script>\r\n  \r\n  <style scoped lang=\"scss\"></style>\r\n  "],"mappings":";;;AAoHA,OAAAA,qBAAA;AACA,OAAAC,SAAA;AACA,OAAAC,YAAA;AACA,OAAAC,QAAA;AACA;AACA;EACAC,IAAA;EACAC,UAAA;IACAJ,SAAA,EAAAA,SAAA;IACAC,YAAA,EAAAA,YAAA;IACAC,QAAA,EAAAA;EACA;EACAG,IAAA,WAAAA,KAAA;IACA;MACAC,KAAA;MACAC,QAAA;MACAC,eAAA;MACAC,mBAAA;MACAC,YAAA;MACAC,UAAA;IACA;EACA;EACAC,OAAA,WAAAA,QAAA;IACA,KAAAC,KAAA,CAAAC,UAAA,CAAAC,KAAA;EACA;EACAC,OAAA;IACAC,KAAA,WAAAA,MAAA;MAAA,IAAAC,KAAA;MAAA,OAAAC,iBAAA,eAAAC,mBAAA,GAAAC,IAAA,UAAAC,QAAA;QAAA,IAAAC,IAAA,EAAAC,QAAA;QAAA,OAAAJ,mBAAA,GAAAK,IAAA,UAAAC,SAAAC,QAAA;UAAA,kBAAAA,QAAA,CAAAC,IAAA,GAAAD,QAAA,CAAAE,IAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAIA9B,qBAAA,CAAA+B,cAAA;gBACAxB,KAAA,EAAAY,KAAA,CAAAZ;cACA;YAAA;cAFAiB,IAAA,GAAAI,QAAA,CAAAI,IAAA,CAGA1B,IAAA;cAAAsB,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAK,EAAA,GAAAL,QAAA;cAIAM,OAAA,CAAAC,GAAA,CAAAX,IAAA;cACAU,OAAA,CAAAC,GAAA,CAAAP,QAAA,CAAAK,EAAA;cACAd,KAAA,CAAAV,eAAA;cACAU,KAAA,CAAAT,mBAAA;cAAA,OAAAkB,QAAA,CAAAQ,MAAA;YAAA;cAAA,IAGAZ,IAAA,CAAAa,kBAAA;gBAAAT,QAAA,CAAAE,IAAA;gBAAA;cAAA;cACAX,KAAA,CAAAmB,MAAA,CAAAC,QAAA,6BAAAf,IAAA,CAAAgB,EAAA;cACArB,KAAA,CAAAmB,MAAA,CAAAC,QAAA,gCAAApB,KAAA,CAAAZ,KAAA;cACAY,KAAA,CAAAsB,OAAA,CAAAC,IAAA;gBAAAC,IAAA;cAAA;cAAA,OAAAf,QAAA,CAAAQ,MAAA;YAAA;cAAAR,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAE,IAAA;cAAA,OAMA9B,qBAAA,CAAAkB,KAAA;gBACAX,KAAA,EAAAY,KAAA,CAAAZ,KAAA;gBACAC,QAAA,EAAAW,KAAA,CAAAX;cACA;YAAA;cAJAiB,QAAA,GAAAG,QAAA,CAAAI,IAAA,CAKA1B,IAAA;cACAa,KAAA,CAAAmB,MAAA,CAAAC,QAAA,yBAAAd,QAAA,CAAAmB,KAAA;cACAzB,KAAA,CAAAmB,MAAA,CAAAC,QAAA,wBAAAd,QAAA,CAAAD,IAAA;cACAL,KAAA,CAAAmB,MAAA,CAAAC,QAAA;cACApB,KAAA,CAAAsB,OAAA,CAAAC,IAAA;gBAAAC,IAAA;cAAA;cAAAf,QAAA,CAAAE,IAAA;cAAA;YAAA;cAAAF,QAAA,CAAAC,IAAA;cAAAD,QAAA,CAAAiB,EAAA,GAAAjB,QAAA;cAEAT,KAAA,CAAAP,UAAA;cACAO,KAAA,CAAAR,YAAA,GAAAiB,QAAA,CAAAiB,EAAA,CAAApB,QAAA,CAAAnB,IAAA,CAAAwC,KAAA;YAAA;YAAA;cAAA,OAAAlB,QAAA,CAAAmB,IAAA;UAAA;QAAA,GAAAxB,OAAA;MAAA;IAEA;EACA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}